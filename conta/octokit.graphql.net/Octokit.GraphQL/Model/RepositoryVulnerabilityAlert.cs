namespace Octokit.GraphQL.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq.Expressions;
    using Octokit.GraphQL.Core;
    using Octokit.GraphQL.Core.Builders;

    /// <summary>
    /// A alert for a repository with an affected vulnerability.
    /// </summary>
    public class RepositoryVulnerabilityAlert : QueryableValue<RepositoryVulnerabilityAlert>
    {
        internal RepositoryVulnerabilityAlert(Expression expression) : base(expression)
        {
        }

        /// <summary>
        /// When was the alert created?
        /// </summary>
        public DateTimeOffset CreatedAt { get; }

        /// <summary>
        /// The reason the alert was dismissed
        /// </summary>
        public string DismissReason { get; }

        /// <summary>
        /// When was the alert dimissed?
        /// </summary>
        public DateTimeOffset? DismissedAt { get; }

        /// <summary>
        /// The user who dismissed the alert
        /// </summary>
        public User Dismisser => this.CreateProperty(x => x.Dismisser, Octokit.GraphQL.Model.User.Create);

        public ID Id { get; }

        /// <summary>
        /// The associated repository
        /// </summary>
        public Repository Repository => this.CreateProperty(x => x.Repository, Octokit.GraphQL.Model.Repository.Create);

        /// <summary>
        /// The associated security advisory
        /// </summary>
        public SecurityAdvisory SecurityAdvisory => this.CreateProperty(x => x.SecurityAdvisory, Octokit.GraphQL.Model.SecurityAdvisory.Create);

        /// <summary>
        /// The associated security vulnerablity
        /// </summary>
        public SecurityVulnerability SecurityVulnerability => this.CreateProperty(x => x.SecurityVulnerability, Octokit.GraphQL.Model.SecurityVulnerability.Create);

        /// <summary>
        /// The vulnerable manifest filename
        /// </summary>
        public string VulnerableManifestFilename { get; }

        /// <summary>
        /// The vulnerable manifest path
        /// </summary>
        public string VulnerableManifestPath { get; }

        /// <summary>
        /// The vulnerable requirements
        /// </summary>
        public string VulnerableRequirements { get; }

        internal static RepositoryVulnerabilityAlert Create(Expression expression)
        {
            return new RepositoryVulnerabilityAlert(expression);
        }
    }
}